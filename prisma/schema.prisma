// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  firstName String   @db.VarChar(50)
  lastName  String   @db.VarChar(50)
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

model Post {
  id       Int         @id @default(autoincrement())
  title    String      @db.VarChar(200)
  desc     String      @db.Text
  price    Decimal     @db.Money
  user     User        @relation(fields: [userId], references: [id])
  userId   String      @db.Uuid
  category String      @db.VarChar(50)
  images   PostImage[]
  vehicle  Vehicle?
}

model PostImage {
  id     Int    @id @default(autoincrement())
  image  String @db.Text
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
}

model Vehicle {
  id         Int     @id @default(autoincrement())
  make       String  @db.VarChar(50)
  model      String  @db.VarChar(50)
  year       String  @db.VarChar(10)
  mileage    Int     @db.Integer
  type       String  @db.VarChar(50)
  extColor   String  @db.VarChar(50)
  intColor   String  @db.VarChar(50)
  trans      String  @db.VarChar(50)
  engine     String  @db.VarChar(50)
  fuel       String  @db.VarChar(50)
  cleanTitle Boolean @db.Boolean
  post       Post    @relation(fields: [postId], references: [id])
  postId     Int     @unique
}
